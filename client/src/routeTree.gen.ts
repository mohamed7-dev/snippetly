/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteRouteImport } from './routes/dashboard.route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard.index'
import { Route as DashboardFriendsRouteImport } from './routes/dashboard.friends'
import { Route as DashboardCollectionsRouteRouteImport } from './routes/dashboard.collections.route'
import { Route as DashboardCollectionsIndexRouteImport } from './routes/dashboard.collections.index'
import { Route as DashboardCollectionsSlugRouteImport } from './routes/dashboard.collections.$slug'
import { Route as authauthLayoutAuthLayoutRouteRouteImport } from './routes/(auth)/(auth-layout)/_auth-layout/route'
import { Route as authauthLayoutAuthLayoutSignupRouteImport } from './routes/(auth)/(auth-layout)/_auth-layout/signup'
import { Route as authauthLayoutAuthLayoutLoginRouteImport } from './routes/(auth)/(auth-layout)/_auth-layout/login'
import { Route as authauthLayoutAuthLayoutForgotPasswordRouteImport } from './routes/(auth)/(auth-layout)/_auth-layout/forgot-password'

const authauthLayoutRouteImport = createFileRoute('/(auth)/(auth-layout)')()

const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const authauthLayoutRoute = authauthLayoutRouteImport.update({
  id: '/(auth)/(auth-layout)',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardFriendsRoute = DashboardFriendsRouteImport.update({
  id: '/friends',
  path: '/friends',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardCollectionsRouteRoute =
  DashboardCollectionsRouteRouteImport.update({
    id: '/collections',
    path: '/collections',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardCollectionsIndexRoute =
  DashboardCollectionsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DashboardCollectionsRouteRoute,
  } as any)
const DashboardCollectionsSlugRoute =
  DashboardCollectionsSlugRouteImport.update({
    id: '/$slug',
    path: '/$slug',
    getParentRoute: () => DashboardCollectionsRouteRoute,
  } as any)
const authauthLayoutAuthLayoutRouteRoute =
  authauthLayoutAuthLayoutRouteRouteImport.update({
    id: '/_auth-layout',
    getParentRoute: () => authauthLayoutRoute,
  } as any)
const authauthLayoutAuthLayoutSignupRoute =
  authauthLayoutAuthLayoutSignupRouteImport.update({
    id: '/signup',
    path: '/signup',
    getParentRoute: () => authauthLayoutAuthLayoutRouteRoute,
  } as any)
const authauthLayoutAuthLayoutLoginRoute =
  authauthLayoutAuthLayoutLoginRouteImport.update({
    id: '/login',
    path: '/login',
    getParentRoute: () => authauthLayoutAuthLayoutRouteRoute,
  } as any)
const authauthLayoutAuthLayoutForgotPasswordRoute =
  authauthLayoutAuthLayoutForgotPasswordRouteImport.update({
    id: '/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => authauthLayoutAuthLayoutRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof authauthLayoutAuthLayoutRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/collections': typeof DashboardCollectionsRouteRouteWithChildren
  '/dashboard/friends': typeof DashboardFriendsRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/collections/$slug': typeof DashboardCollectionsSlugRoute
  '/dashboard/collections/': typeof DashboardCollectionsIndexRoute
  '/forgot-password': typeof authauthLayoutAuthLayoutForgotPasswordRoute
  '/login': typeof authauthLayoutAuthLayoutLoginRoute
  '/signup': typeof authauthLayoutAuthLayoutSignupRoute
}
export interface FileRoutesByTo {
  '/': typeof authauthLayoutAuthLayoutRouteRouteWithChildren
  '/dashboard/friends': typeof DashboardFriendsRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/collections/$slug': typeof DashboardCollectionsSlugRoute
  '/dashboard/collections': typeof DashboardCollectionsIndexRoute
  '/forgot-password': typeof authauthLayoutAuthLayoutForgotPasswordRoute
  '/login': typeof authauthLayoutAuthLayoutLoginRoute
  '/signup': typeof authauthLayoutAuthLayoutSignupRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/collections': typeof DashboardCollectionsRouteRouteWithChildren
  '/dashboard/friends': typeof DashboardFriendsRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/(auth)/(auth-layout)': typeof authauthLayoutRouteWithChildren
  '/(auth)/(auth-layout)/_auth-layout': typeof authauthLayoutAuthLayoutRouteRouteWithChildren
  '/dashboard/collections/$slug': typeof DashboardCollectionsSlugRoute
  '/dashboard/collections/': typeof DashboardCollectionsIndexRoute
  '/(auth)/(auth-layout)/_auth-layout/forgot-password': typeof authauthLayoutAuthLayoutForgotPasswordRoute
  '/(auth)/(auth-layout)/_auth-layout/login': typeof authauthLayoutAuthLayoutLoginRoute
  '/(auth)/(auth-layout)/_auth-layout/signup': typeof authauthLayoutAuthLayoutSignupRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/dashboard/collections'
    | '/dashboard/friends'
    | '/dashboard/'
    | '/dashboard/collections/$slug'
    | '/dashboard/collections/'
    | '/forgot-password'
    | '/login'
    | '/signup'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard/friends'
    | '/dashboard'
    | '/dashboard/collections/$slug'
    | '/dashboard/collections'
    | '/forgot-password'
    | '/login'
    | '/signup'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/dashboard/collections'
    | '/dashboard/friends'
    | '/dashboard/'
    | '/(auth)/(auth-layout)'
    | '/(auth)/(auth-layout)/_auth-layout'
    | '/dashboard/collections/$slug'
    | '/dashboard/collections/'
    | '/(auth)/(auth-layout)/_auth-layout/forgot-password'
    | '/(auth)/(auth-layout)/_auth-layout/login'
    | '/(auth)/(auth-layout)/_auth-layout/signup'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  authauthLayoutRoute: typeof authauthLayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/(auth-layout)': {
      id: '/(auth)/(auth-layout)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authauthLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/friends': {
      id: '/dashboard/friends'
      path: '/friends'
      fullPath: '/dashboard/friends'
      preLoaderRoute: typeof DashboardFriendsRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/collections': {
      id: '/dashboard/collections'
      path: '/collections'
      fullPath: '/dashboard/collections'
      preLoaderRoute: typeof DashboardCollectionsRouteRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/collections/': {
      id: '/dashboard/collections/'
      path: '/'
      fullPath: '/dashboard/collections/'
      preLoaderRoute: typeof DashboardCollectionsIndexRouteImport
      parentRoute: typeof DashboardCollectionsRouteRoute
    }
    '/dashboard/collections/$slug': {
      id: '/dashboard/collections/$slug'
      path: '/$slug'
      fullPath: '/dashboard/collections/$slug'
      preLoaderRoute: typeof DashboardCollectionsSlugRouteImport
      parentRoute: typeof DashboardCollectionsRouteRoute
    }
    '/(auth)/(auth-layout)/_auth-layout': {
      id: '/(auth)/(auth-layout)/_auth-layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authauthLayoutAuthLayoutRouteRouteImport
      parentRoute: typeof authauthLayoutRoute
    }
    '/(auth)/(auth-layout)/_auth-layout/signup': {
      id: '/(auth)/(auth-layout)/_auth-layout/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authauthLayoutAuthLayoutSignupRouteImport
      parentRoute: typeof authauthLayoutAuthLayoutRouteRoute
    }
    '/(auth)/(auth-layout)/_auth-layout/login': {
      id: '/(auth)/(auth-layout)/_auth-layout/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authauthLayoutAuthLayoutLoginRouteImport
      parentRoute: typeof authauthLayoutAuthLayoutRouteRoute
    }
    '/(auth)/(auth-layout)/_auth-layout/forgot-password': {
      id: '/(auth)/(auth-layout)/_auth-layout/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authauthLayoutAuthLayoutForgotPasswordRouteImport
      parentRoute: typeof authauthLayoutAuthLayoutRouteRoute
    }
  }
}

interface DashboardCollectionsRouteRouteChildren {
  DashboardCollectionsSlugRoute: typeof DashboardCollectionsSlugRoute
  DashboardCollectionsIndexRoute: typeof DashboardCollectionsIndexRoute
}

const DashboardCollectionsRouteRouteChildren: DashboardCollectionsRouteRouteChildren =
  {
    DashboardCollectionsSlugRoute: DashboardCollectionsSlugRoute,
    DashboardCollectionsIndexRoute: DashboardCollectionsIndexRoute,
  }

const DashboardCollectionsRouteRouteWithChildren =
  DashboardCollectionsRouteRoute._addFileChildren(
    DashboardCollectionsRouteRouteChildren,
  )

interface DashboardRouteRouteChildren {
  DashboardCollectionsRouteRoute: typeof DashboardCollectionsRouteRouteWithChildren
  DashboardFriendsRoute: typeof DashboardFriendsRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardCollectionsRouteRoute: DashboardCollectionsRouteRouteWithChildren,
  DashboardFriendsRoute: DashboardFriendsRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

interface authauthLayoutAuthLayoutRouteRouteChildren {
  authauthLayoutAuthLayoutForgotPasswordRoute: typeof authauthLayoutAuthLayoutForgotPasswordRoute
  authauthLayoutAuthLayoutLoginRoute: typeof authauthLayoutAuthLayoutLoginRoute
  authauthLayoutAuthLayoutSignupRoute: typeof authauthLayoutAuthLayoutSignupRoute
}

const authauthLayoutAuthLayoutRouteRouteChildren: authauthLayoutAuthLayoutRouteRouteChildren =
  {
    authauthLayoutAuthLayoutForgotPasswordRoute:
      authauthLayoutAuthLayoutForgotPasswordRoute,
    authauthLayoutAuthLayoutLoginRoute: authauthLayoutAuthLayoutLoginRoute,
    authauthLayoutAuthLayoutSignupRoute: authauthLayoutAuthLayoutSignupRoute,
  }

const authauthLayoutAuthLayoutRouteRouteWithChildren =
  authauthLayoutAuthLayoutRouteRoute._addFileChildren(
    authauthLayoutAuthLayoutRouteRouteChildren,
  )

interface authauthLayoutRouteChildren {
  authauthLayoutAuthLayoutRouteRoute: typeof authauthLayoutAuthLayoutRouteRouteWithChildren
}

const authauthLayoutRouteChildren: authauthLayoutRouteChildren = {
  authauthLayoutAuthLayoutRouteRoute:
    authauthLayoutAuthLayoutRouteRouteWithChildren,
}

const authauthLayoutRouteWithChildren = authauthLayoutRoute._addFileChildren(
  authauthLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  authauthLayoutRoute: authauthLayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
